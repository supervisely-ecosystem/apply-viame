# ==============================================================================
# Cascade Faster R-CNN Detector with Motion Infusion
# ==============================================================================

process detector_input
  :: image_filter
  :filter:type                                 vxl_convert_image

  block filter:vxl_convert_image
    :format                                    byte
    :single_channel                            true
  endblock

process motion_filter1
  :: image_filter
  :filter:type                                 vxl_average

  block filter:vxl_average
    :type                                      window
    :window_size                               8
    :round                                     false
    :output_variance                           true
  endblock

connect from detector_input.image
        to   motion_filter1.image

process float_to_byte1
  :: image_filter
  :filter:type                                 vxl_convert_image

  block filter:vxl_convert_image
    :format                                    byte
    :scale_factor                              0.25
  endblock

connect from motion_filter1.image
        to   float_to_byte1.image

process motion_filter2
  :: image_filter
  :filter:type                                 vxl_average

  block filter:vxl_average
    :type                                      window
    :window_size                               16
    :round                                     false
    :output_variance                           true
  endblock

connect from detector_input.image
        to   motion_filter2.image

process float_to_byte2
  :: image_filter
  :filter:type                                 vxl_convert_image

  block filter:vxl_convert_image
    :format                                    byte
    :scale_factor                              0.75
  endblock

connect from motion_filter2.image
        to   float_to_byte2.image

# ==============================================================================

process image_merger1
  :: merge_images
  :merge_images:type                           ocv

connect from float_to_byte1.image
        to   image_merger1.image1
connect from detector_input.image
        to   image_merger1.image2

process image_merger2
  :: merge_images
  :merge_images:type                           ocv

connect from image_merger1.image
        to   image_merger2.image1
connect from float_to_byte2.image
        to   image_merger2.image2

# ==============================================================================

process detector1
  :: image_object_detector
  :detector:type                               ocv_windowed

  block detector:ocv_windowed
    :detector:type                             netharn

    :mode                                      [-WINDOW-OPTION-]
    :chip_width                                640
    :chip_height                               640
    :chip_adaptive_thresh                      1600000

    block detector:netharn
      relativepath deployed =                  [-MODEL-FILE-]
    endblock
  endblock

connect from image_merger2.image
        to   detector1.image

# ==============================================================================

process detector_merger
  :: merge_detection_sets

connect from detector1.detected_object_set
        to   detector_merger.detected_object_set1

process detector_output
  :: refine_detections
  :refiner:type                                nms

  block refiner:nms
    :max_overlap                               0.50
    :nms_scale_factor                          1.0
    :output_scale_factor                       1.0
  endblock

connect from detector_merger.detected_object_set
        to   detector_output.detected_object_set
